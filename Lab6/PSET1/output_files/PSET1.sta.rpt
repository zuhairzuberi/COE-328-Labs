TimeQuest Timing Analyzer report for PSET1
Thu Nov 25 16:13:41 2021
Quartus II 32-bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock'
 12. Slow Model Hold: 'clock'
 13. Slow Model Minimum Pulse Width: 'clock'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clock'
 24. Fast Model Hold: 'clock'
 25. Fast Model Minimum Pulse Width: 'clock'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; PSET1                                                              ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C35F672C6                                                       ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 8           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processors 2-8         ;   0.0%      ;
+----------------------------+-------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                            ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 188.11 MHz ; 188.11 MHz      ; clock      ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -4.316 ; -34.810       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.555 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -35.380               ;
+-------+--------+-----------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock'                                                                                              ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; -4.316 ; latch1:inst1|Q[1] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.351      ;
; -4.312 ; latch1:inst1|Q[1] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 5.350      ;
; -4.296 ; latch1:inst1|Q[1] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.331      ;
; -4.254 ; latch1:inst1|Q[1] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.289      ;
; -4.212 ; latch1:inst1|Q[0] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.247      ;
; -4.208 ; latch1:inst1|Q[0] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 5.246      ;
; -4.192 ; latch1:inst1|Q[0] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.227      ;
; -4.169 ; latch1:inst1|Q[1] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 5.206      ;
; -4.167 ; latch1:inst|Q[0]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.202      ;
; -4.163 ; latch1:inst|Q[0]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 5.201      ;
; -4.150 ; latch1:inst1|Q[0] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.185      ;
; -4.147 ; latch1:inst|Q[0]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.182      ;
; -4.105 ; latch1:inst|Q[0]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.140      ;
; -4.102 ; latch1:inst|Q[1]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.137      ;
; -4.098 ; latch1:inst|Q[1]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 5.136      ;
; -4.082 ; latch1:inst|Q[1]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.117      ;
; -4.065 ; latch1:inst1|Q[0] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 5.102      ;
; -4.040 ; latch1:inst|Q[1]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 5.075      ;
; -4.020 ; latch1:inst|Q[0]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 5.057      ;
; -3.955 ; latch1:inst|Q[1]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.992      ;
; -3.951 ; latch1:inst1|Q[2] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.986      ;
; -3.930 ; latch1:inst1|Q[2] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.965      ;
; -3.922 ; latch1:inst|Q[2]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.957      ;
; -3.901 ; latch1:inst|Q[2]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.936      ;
; -3.888 ; latch1:inst1|Q[2] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.923      ;
; -3.886 ; latch1:inst1|Q[3] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.921      ;
; -3.865 ; latch1:inst1|Q[3] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.900      ;
; -3.859 ; latch1:inst|Q[2]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.894      ;
; -3.838 ; latch1:inst|Q[3]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.873      ;
; -3.823 ; latch1:inst1|Q[3] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.858      ;
; -3.817 ; latch1:inst|Q[3]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.852      ;
; -3.810 ; latch1:inst|Q[4]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.845      ;
; -3.801 ; latch1:inst1|Q[2] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.838      ;
; -3.779 ; latch1:inst1|Q[4] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.814      ;
; -3.775 ; latch1:inst|Q[3]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.810      ;
; -3.772 ; latch1:inst|Q[2]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.809      ;
; -3.750 ; latch1:inst1|Q[2] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.788      ;
; -3.747 ; latch1:inst|Q[4]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.782      ;
; -3.743 ; latch1:inst|Q[5]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.778      ;
; -3.726 ; latch1:inst|Q[2]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.764      ;
; -3.716 ; latch1:inst1|Q[4] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.751      ;
; -3.704 ; latch1:inst1|Q[5] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.739      ;
; -3.491 ; latch1:inst1|Q[0] ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.529      ;
; -3.477 ; latch1:inst|Q[4]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.512      ;
; -3.446 ; latch1:inst1|Q[4] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.481      ;
; -3.446 ; latch1:inst|Q[0]  ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.484      ;
; -3.439 ; latch1:inst1|Q[0] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.477      ;
; -3.421 ; latch1:inst1|Q[3] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.458      ;
; -3.394 ; latch1:inst|Q[0]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.432      ;
; -3.376 ; latch1:inst|Q[3]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.413      ;
; -3.363 ; latch1:inst|Q[5]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.398      ;
; -3.354 ; latch1:inst1|Q[6] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.389      ;
; -3.329 ; latch1:inst1|Q[5] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.364      ;
; -3.321 ; latch1:inst|Q[6]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.356      ;
; -3.280 ; latch1:inst1|Q[1] ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.318      ;
; -3.252 ; latch1:inst1|Q[3] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.290      ;
; -3.243 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.288      ;
; -3.240 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.288      ;
; -3.228 ; latch1:inst1|Q[1] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.266      ;
; -3.207 ; latch1:inst|Q[3]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.245      ;
; -3.194 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.242      ;
; -3.167 ; latch1:inst|Q[1]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.205      ;
; -3.141 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.186      ;
; -3.140 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 4.187      ;
; -3.104 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.152      ;
; -3.093 ; latch1:inst|Q[5]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.128      ;
; -3.088 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.133      ;
; -3.080 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.125      ;
; -3.077 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.125      ;
; -3.069 ; latch1:inst|Q[1]  ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 4.107      ;
; -3.059 ; latch1:inst1|Q[5] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.094      ;
; -3.059 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.107      ;
; -3.056 ; latch1:inst1|Q[0] ; ALU:inst8|result[0] ; clock        ; clock       ; 1.000        ; -0.011     ; 4.081      ;
; -3.015 ; latch1:inst|Q[0]  ; ALU:inst8|result[0] ; clock        ; clock       ; 1.000        ; -0.011     ; 4.040      ;
; -3.003 ; latch1:inst|Q[4]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.040      ;
; -2.986 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.031      ;
; -2.977 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 4.024      ;
; -2.975 ; latch1:inst1|Q[4] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 4.012      ;
; -2.975 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.020      ;
; -2.965 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 4.010      ;
; -2.962 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.010      ;
; -2.953 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 4.001      ;
; -2.948 ; latch1:inst1|Q[6] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.983      ;
; -2.948 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 3.996      ;
; -2.941 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 3.989      ;
; -2.937 ; latch1:inst|Q[6]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.972      ;
; -2.935 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 3.982      ;
; -2.934 ; latch1:inst1|Q[7] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.969      ;
; -2.927 ; latch1:inst|Q[2]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.965      ;
; -2.919 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 3.964      ;
; -2.874 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 3.919      ;
; -2.862 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 3.909      ;
; -2.826 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 3.874      ;
; -2.823 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 3.868      ;
; -2.777 ; latch1:inst1|Q[2] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.815      ;
; -2.772 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 3.820      ;
; -2.708 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 3.753      ;
; -2.678 ; latch1:inst|Q[0]  ; ALU:inst8|Neg       ; clock        ; clock       ; 1.000        ; -0.011     ; 3.703      ;
; -2.659 ; latch1:inst|Q[7]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.694      ;
; -2.657 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 3.705      ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock'                                                                                              ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node         ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; 0.555 ; FSM:inst3|yfsm.s2 ; FSM:inst3|yfsm.s3   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.821      ;
; 0.681 ; FSM:inst3|yfsm.s4 ; FSM:inst3|yfsm.s5   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.947      ;
; 0.700 ; FSM:inst3|yfsm.s6 ; FSM:inst3|yfsm.s7   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.966      ;
; 0.715 ; FSM:inst3|yfsm.s0 ; FSM:inst3|yfsm.s1   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.981      ;
; 0.717 ; FSM:inst3|yfsm.s3 ; FSM:inst3|yfsm.s4   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.983      ;
; 0.860 ; FSM:inst3|yfsm.s5 ; FSM:inst3|yfsm.s6   ; clock        ; clock       ; 0.000        ; 0.000      ; 1.126      ;
; 0.863 ; FSM:inst3|yfsm.s7 ; FSM:inst3|yfsm.s8   ; clock        ; clock       ; 0.000        ; 0.000      ; 1.129      ;
; 1.078 ; FSM:inst3|yfsm.s8 ; FSM:inst3|yfsm.s0   ; clock        ; clock       ; 0.000        ; 0.000      ; 1.344      ;
; 1.078 ; FSM:inst3|yfsm.s1 ; FSM:inst3|yfsm.s2   ; clock        ; clock       ; 0.000        ; 0.000      ; 1.344      ;
; 1.241 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.506      ;
; 1.245 ; FSM:inst3|yfsm.s1 ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.001     ; 1.510      ;
; 1.354 ; latch1:inst|Q[7]  ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.619      ;
; 1.365 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.640      ;
; 1.369 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.644      ;
; 1.370 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.645      ;
; 1.373 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.650      ;
; 1.383 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.658      ;
; 1.383 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.658      ;
; 1.383 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.658      ;
; 1.402 ; latch1:inst|Q[6]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.667      ;
; 1.411 ; latch1:inst|Q[5]  ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.676      ;
; 1.433 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.698      ;
; 1.453 ; latch1:inst1|Q[5] ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.718      ;
; 1.492 ; latch1:inst1|Q[1] ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.760      ;
; 1.493 ; latch1:inst|Q[4]  ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.760      ;
; 1.522 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.799      ;
; 1.575 ; latch1:inst1|Q[7] ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.840      ;
; 1.577 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.855      ;
; 1.577 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.855      ;
; 1.593 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.871      ;
; 1.593 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.871      ;
; 1.593 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.871      ;
; 1.627 ; latch1:inst1|Q[4] ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.894      ;
; 1.644 ; latch1:inst1|Q[3] ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.912      ;
; 1.658 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.923      ;
; 1.665 ; latch1:inst1|Q[2] ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.933      ;
; 1.688 ; latch1:inst|Q[1]  ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.956      ;
; 1.768 ; latch1:inst1|Q[6] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.033      ;
; 1.800 ; latch1:inst|Q[3]  ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.068      ;
; 1.890 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.155      ;
; 1.902 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.180      ;
; 1.925 ; latch1:inst|Q[2]  ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.193      ;
; 1.943 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.218      ;
; 1.964 ; latch1:inst|Q[0]  ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.011     ; 2.219      ;
; 2.018 ; latch1:inst1|Q[0] ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.011     ; 2.273      ;
; 2.081 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.356      ;
; 2.106 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.381      ;
; 2.219 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.494      ;
; 2.228 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.503      ;
; 2.267 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.542      ;
; 2.280 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.545      ;
; 2.316 ; latch1:inst1|Q[7] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 2.571      ;
; 2.334 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.612      ;
; 2.338 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.616      ;
; 2.340 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.618      ;
; 2.349 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 2.626      ;
; 2.375 ; latch1:inst|Q[7]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 2.630      ;
; 2.412 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.677      ;
; 2.472 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.750      ;
; 2.476 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.754      ;
; 2.478 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.756      ;
; 2.483 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.758      ;
; 2.487 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 2.764      ;
; 2.510 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.785      ;
; 2.531 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.796      ;
; 2.619 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.897      ;
; 2.623 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.901      ;
; 2.623 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.898      ;
; 2.625 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.903      ;
; 2.634 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 2.911      ;
; 2.658 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.936      ;
; 2.662 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.940      ;
; 2.662 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.937      ;
; 2.664 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 2.942      ;
; 2.673 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 2.950      ;
; 2.688 ; latch1:inst|Q[6]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 2.943      ;
; 2.724 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 2.999      ;
; 2.744 ; latch1:inst1|Q[6] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 2.999      ;
; 2.764 ; latch1:inst1|Q[5] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.019      ;
; 2.781 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 3.056      ;
; 2.785 ; latch1:inst|Q[5]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.040      ;
; 2.809 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 3.084      ;
; 2.824 ; latch1:inst1|Q[4] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.079      ;
; 2.889 ; latch1:inst|Q[4]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.144      ;
; 2.928 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 3.203      ;
; 2.999 ; latch1:inst|Q[3]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.254      ;
; 3.049 ; latch1:inst1|Q[2] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.304      ;
; 3.053 ; latch1:inst1|Q[3] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.308      ;
; 3.055 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 3.333      ;
; 3.075 ; latch1:inst|Q[2]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.330      ;
; 3.107 ; latch1:inst1|Q[5] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.372      ;
; 3.116 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 3.393      ;
; 3.139 ; latch1:inst1|Q[1] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.394      ;
; 3.139 ; latch1:inst|Q[5]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.404      ;
; 3.162 ; latch1:inst|Q[1]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.417      ;
; 3.175 ; latch1:inst1|Q[4] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.440      ;
; 3.214 ; latch1:inst|Q[4]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.479      ;
; 3.218 ; latch1:inst1|Q[0] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.011     ; 3.473      ;
; 3.226 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 3.501      ;
; 3.242 ; latch1:inst|Q[3]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.507      ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|Neg          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|Neg          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[7]       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s1|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s1|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s2|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s2|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s3|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s3|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s4|clk      ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------+
; Setup Times                                                                ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; A[*]           ; clock      ; 3.792 ; 3.792 ; Rise       ; clock           ;
;  A[0]          ; clock      ; 3.569 ; 3.569 ; Rise       ; clock           ;
;  A[1]          ; clock      ; 3.308 ; 3.308 ; Rise       ; clock           ;
;  A[2]          ; clock      ; 3.540 ; 3.540 ; Rise       ; clock           ;
;  A[3]          ; clock      ; 3.680 ; 3.680 ; Rise       ; clock           ;
;  A[4]          ; clock      ; 3.341 ; 3.341 ; Rise       ; clock           ;
;  A[5]          ; clock      ; 3.792 ; 3.792 ; Rise       ; clock           ;
;  A[6]          ; clock      ; 3.311 ; 3.311 ; Rise       ; clock           ;
;  A[7]          ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
; B[*]           ; clock      ; 3.830 ; 3.830 ; Rise       ; clock           ;
;  B[0]          ; clock      ; 3.574 ; 3.574 ; Rise       ; clock           ;
;  B[1]          ; clock      ; 3.802 ; 3.802 ; Rise       ; clock           ;
;  B[2]          ; clock      ; 3.591 ; 3.591 ; Rise       ; clock           ;
;  B[3]          ; clock      ; 3.830 ; 3.830 ; Rise       ; clock           ;
;  B[4]          ; clock      ; 3.578 ; 3.578 ; Rise       ; clock           ;
;  B[5]          ; clock      ; 3.797 ; 3.797 ; Rise       ; clock           ;
;  B[6]          ; clock      ; 3.822 ; 3.822 ; Rise       ; clock           ;
;  B[7]          ; clock      ; 3.344 ; 3.344 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.167 ; 0.167 ; Rise       ; clock           ;
; data_in        ; clock      ; 3.592 ; 3.592 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -3.078 ; -3.078 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -3.339 ; -3.339 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -3.078 ; -3.078 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -3.310 ; -3.310 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -3.450 ; -3.450 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -3.111 ; -3.111 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -3.562 ; -3.562 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -3.081 ; -3.081 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -3.523 ; -3.523 ; Rise       ; clock           ;
; B[*]           ; clock      ; -3.114 ; -3.114 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -3.344 ; -3.344 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -3.572 ; -3.572 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -3.361 ; -3.361 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -3.600 ; -3.600 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -3.348 ; -3.348 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -3.567 ; -3.567 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -3.592 ; -3.592 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -3.114 ; -3.114 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.191  ; 0.191  ; Rise       ; clock           ;
; data_in        ; clock      ; -3.362 ; -3.362 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 8.048 ; 8.048 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 8.047 ; 8.047 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.806 ; 7.806 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 8.048 ; 8.048 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 8.045 ; 8.045 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.816 ; 7.816 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 7.822 ; 7.822 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.809 ; 7.809 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 8.007 ; 8.007 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.966 ; 7.966 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.781 ; 7.781 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.998 ; 7.998 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.766 ; 7.766 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.741 ; 7.741 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 8.007 ; 8.007 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.785 ; 7.785 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 9.104 ; 9.104 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 8.774 ; 8.774 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 9.104 ; 9.104 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 8.846 ; 8.846 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 8.912 ; 8.912 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 7.349 ; 7.349 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 7.590 ; 7.590 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.349 ; 7.349 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 7.594 ; 7.594 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 7.589 ; 7.589 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.360 ; 7.360 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 7.366 ; 7.366 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.352 ; 7.352 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 7.665 ; 7.665 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.905 ; 7.905 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.683 ; 7.683 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.898 ; 7.898 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.672 ; 7.672 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.665 ; 7.665 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 7.906 ; 7.906 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.686 ; 7.686 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 6.633 ; 6.633 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 6.633 ; 6.633 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 7.255 ; 7.255 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 6.996 ; 6.996 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 7.066 ; 7.066 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -1.288 ; -9.471        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.260 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -35.380               ;
+-------+--------+-----------------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock'                                                                                              ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; -1.288 ; latch1:inst1|Q[1] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.319      ;
; -1.264 ; latch1:inst1|Q[1] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.295      ;
; -1.257 ; latch1:inst1|Q[1] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.288      ;
; -1.244 ; latch1:inst1|Q[1] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.278      ;
; -1.244 ; latch1:inst1|Q[0] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.275      ;
; -1.229 ; latch1:inst|Q[0]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.260      ;
; -1.220 ; latch1:inst1|Q[0] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.251      ;
; -1.213 ; latch1:inst1|Q[0] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.244      ;
; -1.205 ; latch1:inst|Q[0]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.236      ;
; -1.200 ; latch1:inst1|Q[0] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.234      ;
; -1.198 ; latch1:inst|Q[0]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.229      ;
; -1.197 ; latch1:inst|Q[1]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.228      ;
; -1.186 ; latch1:inst1|Q[1] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.219      ;
; -1.185 ; latch1:inst|Q[0]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.219      ;
; -1.173 ; latch1:inst|Q[1]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.204      ;
; -1.166 ; latch1:inst|Q[1]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.197      ;
; -1.153 ; latch1:inst|Q[1]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.187      ;
; -1.142 ; latch1:inst1|Q[0] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.175      ;
; -1.127 ; latch1:inst|Q[0]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.160      ;
; -1.110 ; latch1:inst1|Q[2] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.141      ;
; -1.103 ; latch1:inst|Q[2]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.134      ;
; -1.095 ; latch1:inst|Q[1]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.128      ;
; -1.085 ; latch1:inst1|Q[2] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.116      ;
; -1.081 ; latch1:inst1|Q[3] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.112      ;
; -1.078 ; latch1:inst|Q[2]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.109      ;
; -1.078 ; latch1:inst1|Q[2] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.109      ;
; -1.071 ; latch1:inst|Q[2]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.102      ;
; -1.058 ; latch1:inst|Q[3]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.089      ;
; -1.056 ; latch1:inst1|Q[3] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.087      ;
; -1.049 ; latch1:inst1|Q[3] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.080      ;
; -1.041 ; latch1:inst|Q[4]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.072      ;
; -1.033 ; latch1:inst|Q[3]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.064      ;
; -1.032 ; latch1:inst1|Q[4] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.063      ;
; -1.026 ; latch1:inst1|Q[2] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.060      ;
; -1.026 ; latch1:inst|Q[3]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.057      ;
; -1.021 ; latch1:inst|Q[2]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 2.055      ;
; -1.009 ; latch1:inst|Q[5]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.040      ;
; -1.009 ; latch1:inst|Q[4]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.040      ;
; -1.006 ; latch1:inst1|Q[2] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.039      ;
; -1.000 ; latch1:inst1|Q[4] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.031      ;
; -0.999 ; latch1:inst|Q[2]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 2.032      ;
; -0.993 ; latch1:inst1|Q[5] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 2.024      ;
; -0.913 ; latch1:inst|Q[4]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.944      ;
; -0.912 ; latch1:inst1|Q[0] ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.946      ;
; -0.904 ; latch1:inst1|Q[4] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.935      ;
; -0.898 ; latch1:inst|Q[0]  ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.932      ;
; -0.875 ; latch1:inst|Q[5]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.906      ;
; -0.875 ; latch1:inst1|Q[3] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.908      ;
; -0.873 ; latch1:inst1|Q[0] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.907      ;
; -0.873 ; latch1:inst1|Q[6] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.904      ;
; -0.859 ; latch1:inst1|Q[5] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.890      ;
; -0.858 ; latch1:inst|Q[0]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.892      ;
; -0.857 ; latch1:inst|Q[6]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.888      ;
; -0.855 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.896      ;
; -0.852 ; latch1:inst|Q[3]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.885      ;
; -0.851 ; latch1:inst1|Q[1] ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.885      ;
; -0.849 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.893      ;
; -0.845 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.889      ;
; -0.832 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.873      ;
; -0.827 ; latch1:inst1|Q[3] ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.861      ;
; -0.821 ; latch1:inst1|Q[1] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.855      ;
; -0.815 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.856      ;
; -0.806 ; latch1:inst|Q[3]  ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.840      ;
; -0.805 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.846      ;
; -0.799 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.843      ;
; -0.798 ; latch1:inst|Q[6]  ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.829      ;
; -0.797 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 1.840      ;
; -0.796 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.840      ;
; -0.795 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.839      ;
; -0.776 ; latch1:inst|Q[5]  ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.807      ;
; -0.773 ; latch1:inst1|Q[0] ; ALU:inst8|result[0] ; clock        ; clock       ; 1.000        ; -0.012     ; 1.793      ;
; -0.770 ; latch1:inst|Q[1]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.804      ;
; -0.763 ; latch1:inst|Q[0]  ; ALU:inst8|result[0] ; clock        ; clock       ; 1.000        ; -0.012     ; 1.783      ;
; -0.762 ; latch1:inst1|Q[5] ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.793      ;
; -0.762 ; latch1:inst|Q[1]  ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.796      ;
; -0.759 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.800      ;
; -0.753 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.797      ;
; -0.747 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 1.790      ;
; -0.746 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.790      ;
; -0.744 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[5] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.785      ;
; -0.743 ; latch1:inst1|Q[6] ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.774      ;
; -0.742 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.783      ;
; -0.734 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.778      ;
; -0.730 ; latch1:inst|Q[4]  ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.763      ;
; -0.726 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 1.769      ;
; -0.725 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.766      ;
; -0.724 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.768      ;
; -0.723 ; latch1:inst1|Q[4] ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.756      ;
; -0.721 ; latch1:inst1|Q[7] ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.752      ;
; -0.710 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.751      ;
; -0.703 ; latch1:inst|Q[2]  ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.737      ;
; -0.692 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.733      ;
; -0.686 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[4] ; clock        ; clock       ; 1.000        ; 0.011      ; 1.729      ;
; -0.685 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[1] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.729      ;
; -0.674 ; latch1:inst|Q[0]  ; ALU:inst8|Neg       ; clock        ; clock       ; 1.000        ; -0.012     ; 1.694      ;
; -0.674 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[3] ; clock        ; clock       ; 1.000        ; 0.012      ; 1.718      ;
; -0.645 ; latch1:inst|Q[7]  ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.676      ;
; -0.631 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[7] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.672      ;
; -0.629 ; latch1:inst1|Q[2] ; ALU:inst8|result[2] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.663      ;
; -0.614 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[6] ; clock        ; clock       ; 1.000        ; 0.009      ; 1.655      ;
+--------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock'                                                                                              ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node         ; To Node             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+
; 0.260 ; FSM:inst3|yfsm.s2 ; FSM:inst3|yfsm.s3   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.412      ;
; 0.335 ; FSM:inst3|yfsm.s4 ; FSM:inst3|yfsm.s5   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.487      ;
; 0.347 ; FSM:inst3|yfsm.s6 ; FSM:inst3|yfsm.s7   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.499      ;
; 0.347 ; FSM:inst3|yfsm.s0 ; FSM:inst3|yfsm.s1   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.499      ;
; 0.360 ; FSM:inst3|yfsm.s3 ; FSM:inst3|yfsm.s4   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.512      ;
; 0.416 ; FSM:inst3|yfsm.s5 ; FSM:inst3|yfsm.s6   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.568      ;
; 0.420 ; FSM:inst3|yfsm.s7 ; FSM:inst3|yfsm.s8   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.572      ;
; 0.479 ; FSM:inst3|yfsm.s8 ; FSM:inst3|yfsm.s0   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.631      ;
; 0.511 ; FSM:inst3|yfsm.s1 ; FSM:inst3|yfsm.s2   ; clock        ; clock       ; 0.000        ; 0.000      ; 0.663      ;
; 0.565 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.715      ;
; 0.574 ; FSM:inst3|yfsm.s1 ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.002     ; 0.724      ;
; 0.620 ; latch1:inst|Q[7]  ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.771      ;
; 0.621 ; latch1:inst|Q[6]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.772      ;
; 0.626 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.787      ;
; 0.630 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.791      ;
; 0.631 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.792      ;
; 0.634 ; latch1:inst|Q[5]  ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.785      ;
; 0.641 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.791      ;
; 0.642 ; latch1:inst1|Q[5] ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.793      ;
; 0.658 ; latch1:inst1|Q[1] ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.812      ;
; 0.658 ; latch1:inst|Q[4]  ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.811      ;
; 0.676 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 0.839      ;
; 0.681 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.842      ;
; 0.681 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.842      ;
; 0.681 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 0.842      ;
; 0.694 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 0.857      ;
; 0.703 ; latch1:inst1|Q[7] ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.854      ;
; 0.716 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 0.880      ;
; 0.716 ; latch1:inst1|Q[4] ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.869      ;
; 0.717 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 0.881      ;
; 0.720 ; latch1:inst1|Q[3] ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.874      ;
; 0.728 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.878      ;
; 0.744 ; latch1:inst|Q[1]  ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.898      ;
; 0.753 ; latch1:inst1|Q[2] ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.907      ;
; 0.772 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 0.936      ;
; 0.772 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 0.936      ;
; 0.772 ; FSM:inst3|yfsm.s8 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 0.936      ;
; 0.794 ; latch1:inst1|Q[6] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.945      ;
; 0.800 ; latch1:inst|Q[3]  ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.954      ;
; 0.842 ; latch1:inst|Q[2]  ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.996      ;
; 0.843 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.993      ;
; 0.850 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.011      ;
; 0.886 ; FSM:inst3|yfsm.s7 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.050      ;
; 0.888 ; latch1:inst|Q[0]  ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.012     ; 1.028      ;
; 0.901 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.062      ;
; 0.914 ; latch1:inst1|Q[0] ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.012     ; 1.054      ;
; 0.928 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.089      ;
; 0.977 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.138      ;
; 0.984 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.145      ;
; 0.989 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.150      ;
; 1.023 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.187      ;
; 1.027 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.190      ;
; 1.030 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.194      ;
; 1.030 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.194      ;
; 1.030 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.180      ;
; 1.037 ; latch1:inst1|Q[7] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.177      ;
; 1.062 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.212      ;
; 1.074 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.238      ;
; 1.078 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.241      ;
; 1.080 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.241      ;
; 1.081 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.245      ;
; 1.081 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.245      ;
; 1.081 ; latch1:inst|Q[7]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.221      ;
; 1.099 ; FSM:inst3|yfsm.s2 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.260      ;
; 1.105 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.255      ;
; 1.150 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.314      ;
; 1.152 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.313      ;
; 1.154 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.317      ;
; 1.155 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.316      ;
; 1.157 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.321      ;
; 1.157 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.321      ;
; 1.162 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[3] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.326      ;
; 1.166 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.329      ;
; 1.167 ; latch1:inst|Q[6]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.307      ;
; 1.169 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.333      ;
; 1.169 ; FSM:inst3|yfsm.s3 ; ALU:inst8|result[2] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.333      ;
; 1.194 ; latch1:inst1|Q[6] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.334      ;
; 1.195 ; FSM:inst3|yfsm.s6 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.356      ;
; 1.205 ; latch1:inst1|Q[5] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.345      ;
; 1.208 ; FSM:inst3|yfsm.s4 ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.369      ;
; 1.211 ; latch1:inst|Q[5]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.351      ;
; 1.228 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.389      ;
; 1.237 ; latch1:inst1|Q[4] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.377      ;
; 1.266 ; latch1:inst|Q[4]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.406      ;
; 1.271 ; FSM:inst3|yfsm.s1 ; ALU:inst8|result[5] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.432      ;
; 1.304 ; latch1:inst1|Q[5] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.455      ;
; 1.314 ; latch1:inst|Q[5]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.465      ;
; 1.333 ; latch1:inst|Q[3]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.473      ;
; 1.335 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[1] ; clock        ; clock       ; 0.000        ; 0.012      ; 1.499      ;
; 1.336 ; latch1:inst1|Q[4] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.487      ;
; 1.345 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[4] ; clock        ; clock       ; 0.000        ; 0.011      ; 1.508      ;
; 1.353 ; latch1:inst|Q[4]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.504      ;
; 1.359 ; latch1:inst1|Q[3] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.499      ;
; 1.362 ; latch1:inst1|Q[2] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.502      ;
; 1.369 ; latch1:inst|Q[2]  ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.509      ;
; 1.370 ; latch1:inst|Q[3]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.521      ;
; 1.383 ; latch1:inst1|Q[3] ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.534      ;
; 1.405 ; latch1:inst|Q[2]  ; ALU:inst8|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.556      ;
; 1.407 ; FSM:inst3|yfsm.s5 ; ALU:inst8|result[7] ; clock        ; clock       ; 0.000        ; 0.009      ; 1.568      ;
; 1.407 ; latch1:inst1|Q[1] ; ALU:inst8|Neg       ; clock        ; clock       ; 0.000        ; -0.012     ; 1.547      ;
+-------+-------------------+---------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|Neg          ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|Neg          ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[0]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[0]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[1]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[1]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[2]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[2]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[3]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[3]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[4]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[4]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[5]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[5]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[6]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[6]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU:inst8|result[7]    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU:inst8|result[7]    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[7]       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s0|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s1|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s1|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s2|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s2|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s3|clk      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst3|yfsm.s3|clk      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst3|yfsm.s4|clk      ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; 2.047  ; 2.047  ; Rise       ; clock           ;
;  A[0]          ; clock      ; 1.934  ; 1.934  ; Rise       ; clock           ;
;  A[1]          ; clock      ; 1.802  ; 1.802  ; Rise       ; clock           ;
;  A[2]          ; clock      ; 1.907  ; 1.907  ; Rise       ; clock           ;
;  A[3]          ; clock      ; 1.986  ; 1.986  ; Rise       ; clock           ;
;  A[4]          ; clock      ; 1.826  ; 1.826  ; Rise       ; clock           ;
;  A[5]          ; clock      ; 2.031  ; 2.031  ; Rise       ; clock           ;
;  A[6]          ; clock      ; 1.803  ; 1.803  ; Rise       ; clock           ;
;  A[7]          ; clock      ; 2.047  ; 2.047  ; Rise       ; clock           ;
; B[*]           ; clock      ; 2.058  ; 2.058  ; Rise       ; clock           ;
;  B[0]          ; clock      ; 1.938  ; 1.938  ; Rise       ; clock           ;
;  B[1]          ; clock      ; 2.046  ; 2.046  ; Rise       ; clock           ;
;  B[2]          ; clock      ; 1.937  ; 1.937  ; Rise       ; clock           ;
;  B[3]          ; clock      ; 2.053  ; 2.053  ; Rise       ; clock           ;
;  B[4]          ; clock      ; 1.931  ; 1.931  ; Rise       ; clock           ;
;  B[5]          ; clock      ; 2.028  ; 2.028  ; Rise       ; clock           ;
;  B[6]          ; clock      ; 2.058  ; 2.058  ; Rise       ; clock           ;
;  B[7]          ; clock      ; 1.829  ; 1.829  ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; -0.159 ; -0.159 ; Rise       ; clock           ;
; data_in        ; clock      ; 1.997  ; 1.997  ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -1.682 ; -1.682 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -1.814 ; -1.814 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -1.682 ; -1.682 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -1.787 ; -1.787 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -1.866 ; -1.866 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -1.706 ; -1.706 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -1.911 ; -1.911 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -1.683 ; -1.683 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -1.927 ; -1.927 ; Rise       ; clock           ;
; B[*]           ; clock      ; -1.709 ; -1.709 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -1.818 ; -1.818 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -1.926 ; -1.926 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -1.817 ; -1.817 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -1.933 ; -1.933 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -1.811 ; -1.811 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -1.908 ; -1.908 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -1.938 ; -1.938 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -1.709 ; -1.709 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.385  ; 0.385  ; Rise       ; clock           ;
; data_in        ; clock      ; -1.877 ; -1.877 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.405 ; 4.405 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.405 ; 4.405 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.287 ; 4.287 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.400 ; 4.400 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.396 ; 4.396 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.289 ; 4.289 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.294 ; 4.294 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.282 ; 4.282 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 4.370 ; 4.370 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.369 ; 4.369 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.266 ; 4.266 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.370 ; 4.370 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.252 ; 4.252 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 4.250 ; 4.250 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 4.369 ; 4.369 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.271 ; 4.271 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.843 ; 4.843 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 4.701 ; 4.701 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.843 ; 4.843 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 4.709 ; 4.709 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.753 ; 4.753 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.067 ; 4.067 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.188 ; 4.188 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.067 ; 4.067 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.186 ; 4.186 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.078 ; 4.078 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.081 ; 4.081 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.069 ; 4.069 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 4.220 ; 4.220 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.339 ; 4.339 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.248 ; 4.248 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.341 ; 4.341 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.230 ; 4.230 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 4.220 ; 4.220 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 4.338 ; 4.338 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.245 ; 4.245 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 3.780 ; 3.780 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 3.780 ; 3.780 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.042 ; 4.042 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 3.907 ; 3.907 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 3.951 ; 3.951 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -4.316  ; 0.260 ; N/A      ; N/A     ; -1.380              ;
;  clock           ; -4.316  ; 0.260 ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -34.81  ; 0.0   ; 0.0      ; 0.0     ; -35.38              ;
;  clock           ; -34.810 ; 0.000 ; N/A      ; N/A     ; -35.380             ;
+------------------+---------+-------+----------+---------+---------------------+


+----------------------------------------------------------------------------+
; Setup Times                                                                ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; A[*]           ; clock      ; 3.792 ; 3.792 ; Rise       ; clock           ;
;  A[0]          ; clock      ; 3.569 ; 3.569 ; Rise       ; clock           ;
;  A[1]          ; clock      ; 3.308 ; 3.308 ; Rise       ; clock           ;
;  A[2]          ; clock      ; 3.540 ; 3.540 ; Rise       ; clock           ;
;  A[3]          ; clock      ; 3.680 ; 3.680 ; Rise       ; clock           ;
;  A[4]          ; clock      ; 3.341 ; 3.341 ; Rise       ; clock           ;
;  A[5]          ; clock      ; 3.792 ; 3.792 ; Rise       ; clock           ;
;  A[6]          ; clock      ; 3.311 ; 3.311 ; Rise       ; clock           ;
;  A[7]          ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
; B[*]           ; clock      ; 3.830 ; 3.830 ; Rise       ; clock           ;
;  B[0]          ; clock      ; 3.574 ; 3.574 ; Rise       ; clock           ;
;  B[1]          ; clock      ; 3.802 ; 3.802 ; Rise       ; clock           ;
;  B[2]          ; clock      ; 3.591 ; 3.591 ; Rise       ; clock           ;
;  B[3]          ; clock      ; 3.830 ; 3.830 ; Rise       ; clock           ;
;  B[4]          ; clock      ; 3.578 ; 3.578 ; Rise       ; clock           ;
;  B[5]          ; clock      ; 3.797 ; 3.797 ; Rise       ; clock           ;
;  B[6]          ; clock      ; 3.822 ; 3.822 ; Rise       ; clock           ;
;  B[7]          ; clock      ; 3.344 ; 3.344 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.167 ; 0.167 ; Rise       ; clock           ;
; data_in        ; clock      ; 3.592 ; 3.592 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -1.682 ; -1.682 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -1.814 ; -1.814 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -1.682 ; -1.682 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -1.787 ; -1.787 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -1.866 ; -1.866 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -1.706 ; -1.706 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -1.911 ; -1.911 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -1.683 ; -1.683 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -1.927 ; -1.927 ; Rise       ; clock           ;
; B[*]           ; clock      ; -1.709 ; -1.709 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -1.818 ; -1.818 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -1.926 ; -1.926 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -1.817 ; -1.817 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -1.933 ; -1.933 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -1.811 ; -1.811 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -1.908 ; -1.908 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -1.938 ; -1.938 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -1.709 ; -1.709 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.385  ; 0.385  ; Rise       ; clock           ;
; data_in        ; clock      ; -1.877 ; -1.877 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 8.048 ; 8.048 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 8.047 ; 8.047 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.806 ; 7.806 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 8.048 ; 8.048 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 8.045 ; 8.045 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.816 ; 7.816 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 7.822 ; 7.822 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.809 ; 7.809 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 8.007 ; 8.007 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.966 ; 7.966 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.781 ; 7.781 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.998 ; 7.998 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.766 ; 7.766 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.741 ; 7.741 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 8.007 ; 8.007 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.785 ; 7.785 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 6.421 ; 6.421 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 9.104 ; 9.104 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 8.774 ; 8.774 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 9.104 ; 9.104 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 8.846 ; 8.846 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 8.912 ; 8.912 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.067 ; 4.067 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.188 ; 4.188 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.067 ; 4.067 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.186 ; 4.186 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.078 ; 4.078 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.081 ; 4.081 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.069 ; 4.069 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 4.220 ; 4.220 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.339 ; 4.339 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.248 ; 4.248 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.341 ; 4.341 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.230 ; 4.230 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 4.220 ; 4.220 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 4.338 ; 4.338 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.245 ; 4.245 ; Rise       ; clock           ;
; Sign[*]          ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
;  Sign[6]         ; clock      ; 3.665 ; 3.665 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 3.780 ; 3.780 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 3.780 ; 3.780 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.042 ; 4.042 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 3.907 ; 3.907 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 3.951 ; 3.951 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 576      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 576      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 21    ; 21   ;
; Unconstrained Input Port Paths  ; 59    ; 59   ;
; Unconstrained Output Ports      ; 19    ; 19   ;
; Unconstrained Output Port Paths ; 93    ; 93   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 32-bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Thu Nov 25 16:13:39 2021
Info: Command: quartus_sta PSET1 -c PSET1
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 8 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 4 of the 4 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'PSET1.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clock clock
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -4.316
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -4.316       -34.810 clock 
Info (332146): Worst-case hold slack is 0.555
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.555         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -35.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.288
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.288        -9.471 clock 
Info (332146): Worst-case hold slack is 0.260
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.260         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -35.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 32-bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 325 megabytes
    Info: Processing ended: Thu Nov 25 16:13:41 2021
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


