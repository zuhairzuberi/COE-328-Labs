TimeQuest Timing Analyzer report for PSET2
Sat Nov 27 19:50:23 2021
Quartus II 32-bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock'
 12. Slow Model Hold: 'clock'
 13. Slow Model Minimum Pulse Width: 'clock'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clock'
 24. Fast Model Hold: 'clock'
 25. Fast Model Minimum Pulse Width: 'clock'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+-----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                       ;
+--------------------+--------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version ;
; Revision Name      ; PSET2                                                              ;
; Device Family      ; Cyclone II                                                         ;
; Device Name        ; EP2C35F672C6                                                       ;
; Timing Models      ; Final                                                              ;
; Delay Model        ; Combined                                                           ;
; Rise/Fall Delays   ; Unavailable                                                        ;
+--------------------+--------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 8           ;
; Maximum allowed            ; 4           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 2           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ; < 0.1%      ;
;     Processors 3-8         ;   0.0%      ;
+----------------------------+-------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                            ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 239.23 MHz ; 239.23 MHz      ; clock      ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -3.180 ; -24.041       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.534 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -34.380               ;
+-------+--------+-----------------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock'                                                                                               ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node              ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; -3.180 ; latch1:inst1|Q[0] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.216      ;
; -3.131 ; latch1:inst|Q[3]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.167      ;
; -3.102 ; latch1:inst1|Q[1] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.138      ;
; -3.046 ; latch1:inst1|Q[2] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.082      ;
; -3.010 ; latch1:inst1|Q[3] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.046      ;
; -2.985 ; latch1:inst1|Q[0] ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.001     ; 4.020      ;
; -2.975 ; latch1:inst1|Q[1] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 4.011      ;
; -2.947 ; latch1:inst|Q[3]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.983      ;
; -2.913 ; latch1:inst|Q[0]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.949      ;
; -2.905 ; latch1:inst1|Q[4] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.941      ;
; -2.893 ; latch1:inst1|Q[1] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.929      ;
; -2.885 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.923      ;
; -2.883 ; latch1:inst|Q[1]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.919      ;
; -2.876 ; latch1:inst|Q[1]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.910      ;
; -2.858 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.895      ;
; -2.858 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.896      ;
; -2.846 ; latch1:inst|Q[0]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.882      ;
; -2.832 ; latch1:inst1|Q[0] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.867      ;
; -2.826 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.863      ;
; -2.822 ; latch1:inst1|Q[0] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.858      ;
; -2.811 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.848      ;
; -2.807 ; latch1:inst|Q[1]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.843      ;
; -2.779 ; latch1:inst1|Q[1] ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.813      ;
; -2.771 ; latch1:inst|Q[2]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.807      ;
; -2.764 ; latch1:inst|Q[0]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.800      ;
; -2.754 ; latch1:inst1|Q[1] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.789      ;
; -2.740 ; latch1:inst|Q[1]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.776      ;
; -2.740 ; latch1:inst1|Q[0] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.776      ;
; -2.725 ; latch1:inst|Q[4]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.761      ;
; -2.720 ; latch1:inst1|Q[1] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.755      ;
; -2.717 ; latch1:inst|Q[0]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.751      ;
; -2.704 ; latch1:inst|Q[2]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.740      ;
; -2.702 ; latch1:inst|Q[6]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.739      ;
; -2.698 ; latch1:inst1|Q[2] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.733      ;
; -2.689 ; latch1:inst1|Q[2] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.725      ;
; -2.688 ; latch1:inst1|Q[0] ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.722      ;
; -2.685 ; latch1:inst|Q[2]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.721      ;
; -2.679 ; latch1:inst|Q[0]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.714      ;
; -2.673 ; latch1:inst1|Q[0] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.708      ;
; -2.653 ; latch1:inst1|Q[3] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.689      ;
; -2.629 ; latch1:inst|Q[4]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.665      ;
; -2.624 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.662      ;
; -2.614 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.652      ;
; -2.607 ; latch1:inst1|Q[2] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.643      ;
; -2.598 ; latch1:inst|Q[3]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.634      ;
; -2.597 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.634      ;
; -2.597 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.635      ;
; -2.595 ; latch1:inst1|Q[1] ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.630      ;
; -2.591 ; latch1:inst|Q[0]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.626      ;
; -2.571 ; latch1:inst1|Q[3] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.607      ;
; -2.568 ; latch1:inst|Q[0]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.603      ;
; -2.565 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.601      ;
; -2.565 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.602      ;
; -2.561 ; latch1:inst|Q[3]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.596      ;
; -2.560 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.598      ;
; -2.554 ; latch1:inst1|Q[5] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.590      ;
; -2.550 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.587      ;
; -2.549 ; latch1:inst1|Q[6] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.584      ;
; -2.539 ; latch1:inst1|Q[2] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.574      ;
; -2.526 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.562      ;
; -2.517 ; latch1:inst|Q[1]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.552      ;
; -2.513 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.550      ;
; -2.508 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.544      ;
; -2.503 ; latch1:inst1|Q[3] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.538      ;
; -2.502 ; latch1:inst1|Q[3] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.537      ;
; -2.494 ; latch1:inst|Q[2]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.528      ;
; -2.485 ; latch1:inst|Q[1]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.520      ;
; -2.481 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[0] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.517      ;
; -2.480 ; latch1:inst|Q[4]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.516      ;
; -2.478 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.516      ;
; -2.475 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.513      ;
; -2.464 ; latch1:inst1|Q[4] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.500      ;
; -2.453 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.490      ;
; -2.450 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.488      ;
; -2.449 ; latch1:inst|Q[2]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.484      ;
; -2.432 ; latch1:inst|Q[0]  ; ALU2:inst2|result[0] ; clock        ; clock       ; 1.000        ; -0.002     ; 3.466      ;
; -2.428 ; latch1:inst1|Q[5] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.464      ;
; -2.426 ; latch1:inst|Q[2]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.461      ;
; -2.422 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.460      ;
; -2.422 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.459      ;
; -2.415 ; latch1:inst|Q[3]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.450      ;
; -2.398 ; latch1:inst1|Q[4] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.433      ;
; -2.395 ; latch1:inst1|Q[7] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.431      ;
; -2.369 ; latch1:inst|Q[5]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.405      ;
; -2.364 ; latch1:inst|Q[7]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.400      ;
; -2.362 ; latch1:inst1|Q[5] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.397      ;
; -2.356 ; latch1:inst1|Q[6] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.392      ;
; -2.347 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.385      ;
; -2.316 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.352      ;
; -2.307 ; latch1:inst|Q[4]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.342      ;
; -2.305 ; latch1:inst1|Q[4] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.341      ;
; -2.275 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.313      ;
; -2.265 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.303      ;
; -2.258 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.296      ;
; -2.257 ; latch1:inst|Q[1]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.001     ; 3.292      ;
; -2.255 ; latch1:inst|Q[6]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.291      ;
; -2.254 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.290      ;
; -2.244 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.002      ; 3.282      ;
; -2.233 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.270      ;
; -2.229 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 3.265      ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock'                                                                                               ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node         ; To Node              ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; 0.534 ; FSM:inst3|yfsm.s0 ; FSM:inst3|yfsm.s1    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.800      ;
; 0.696 ; FSM:inst3|yfsm.s3 ; FSM:inst3|yfsm.s4    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.962      ;
; 0.709 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.975      ;
; 0.711 ; FSM:inst3|yfsm.s8 ; FSM:inst3|yfsm.s0    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.977      ;
; 0.711 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.977      ;
; 0.714 ; FSM:inst3|yfsm.s5 ; FSM:inst3|yfsm.s6    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.980      ;
; 0.757 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.024      ;
; 0.847 ; latch1:inst1|Q[0] ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.112      ;
; 0.859 ; FSM:inst3|yfsm.s4 ; FSM:inst3|yfsm.s5    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.125      ;
; 0.865 ; FSM:inst3|yfsm.s1 ; FSM:inst3|yfsm.s2    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.131      ;
; 0.866 ; FSM:inst3|yfsm.s2 ; FSM:inst3|yfsm.s3    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.132      ;
; 0.879 ; FSM:inst3|yfsm.s7 ; FSM:inst3|yfsm.s8    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.145      ;
; 1.039 ; latch1:inst1|Q[6] ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.305      ;
; 1.078 ; latch1:inst1|Q[5] ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.343      ;
; 1.110 ; FSM:inst3|yfsm.s6 ; FSM:inst3|yfsm.s7    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.376      ;
; 1.177 ; latch1:inst|Q[6]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.443      ;
; 1.241 ; latch1:inst1|Q[4] ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.505      ;
; 1.252 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.519      ;
; 1.305 ; latch1:inst1|Q[7] ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.571      ;
; 1.314 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.582      ;
; 1.317 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.585      ;
; 1.318 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.586      ;
; 1.401 ; latch1:inst|Q[4]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.666      ;
; 1.500 ; latch1:inst|Q[1]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.765      ;
; 1.524 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.791      ;
; 1.634 ; latch1:inst|Q[5]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.900      ;
; 1.669 ; latch1:inst|Q[7]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.935      ;
; 1.676 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.942      ;
; 1.793 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.060      ;
; 1.826 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.093      ;
; 1.841 ; latch1:inst|Q[2]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.107      ;
; 1.846 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.113      ;
; 1.895 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.162      ;
; 1.929 ; latch1:inst1|Q[1] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.195      ;
; 1.945 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.211      ;
; 1.967 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.234      ;
; 1.969 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.235      ;
; 1.978 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.244      ;
; 2.031 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.297      ;
; 2.038 ; latch1:inst|Q[5]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.304      ;
; 2.054 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.321      ;
; 2.066 ; latch1:inst1|Q[0] ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 2.330      ;
; 2.100 ; latch1:inst|Q[0]  ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 2.364      ;
; 2.103 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.370      ;
; 2.133 ; latch1:inst1|Q[3] ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.398      ;
; 2.154 ; latch1:inst1|Q[1] ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.419      ;
; 2.182 ; latch1:inst|Q[4]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.448      ;
; 2.200 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.468      ;
; 2.201 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.469      ;
; 2.235 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.501      ;
; 2.262 ; latch1:inst1|Q[5] ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.528      ;
; 2.288 ; latch1:inst|Q[3]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.554      ;
; 2.303 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.571      ;
; 2.318 ; latch1:inst|Q[1]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.583      ;
; 2.335 ; latch1:inst|Q[5]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.600      ;
; 2.352 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.620      ;
; 2.355 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.622      ;
; 2.358 ; latch1:inst1|Q[2] ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.002     ; 2.622      ;
; 2.410 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.676      ;
; 2.419 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.685      ;
; 2.463 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.729      ;
; 2.467 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.735      ;
; 2.468 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.736      ;
; 2.478 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.746      ;
; 2.479 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.747      ;
; 2.498 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.765      ;
; 2.509 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.777      ;
; 2.510 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 2.778      ;
; 2.549 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.815      ;
; 2.563 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.830      ;
; 2.569 ; latch1:inst1|Q[7] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.835      ;
; 2.637 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.904      ;
; 2.638 ; latch1:inst1|Q[6] ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 2.903      ;
; 2.670 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 2.937      ;
; 2.676 ; latch1:inst1|Q[4] ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.942      ;
; 2.702 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.968      ;
; 2.708 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.974      ;
; 2.729 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.995      ;
; 2.739 ; latch1:inst|Q[2]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.004      ;
; 2.772 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 3.039      ;
; 2.774 ; latch1:inst|Q[3]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.039      ;
; 2.778 ; latch1:inst|Q[0]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.043      ;
; 2.801 ; latch1:inst|Q[0]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.002     ; 3.065      ;
; 2.812 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.002      ; 3.080      ;
; 2.830 ; latch1:inst1|Q[3] ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.095      ;
; 2.844 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 3.111      ;
; 2.883 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 3.151      ;
; 2.891 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.002      ; 3.159      ;
; 2.908 ; latch1:inst|Q[4]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 3.174      ;
; 2.928 ; latch1:inst|Q[0]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 3.194      ;
; 2.935 ; latch1:inst|Q[6]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.001      ; 3.202      ;
; 2.937 ; latch1:inst|Q[1]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 3.202      ;
; 2.951 ; latch1:inst1|Q[2] ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.002     ; 3.215      ;
; 2.961 ; latch1:inst|Q[2]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.002     ; 3.225      ;
; 2.970 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 3.237      ;
; 2.983 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.001      ; 3.250      ;
; 2.988 ; latch1:inst1|Q[6] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 3.254      ;
; 2.990 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 3.256      ;
; 3.004 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.002      ; 3.272      ;
; 3.022 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.002      ; 3.290      ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[4]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[4]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[5]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[5]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[6]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[6]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[7]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[7]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[7]       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[2]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[2]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[3]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[3]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[4]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[4]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[5]|clk    ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+----------------------------------------------------------------------------+
; Setup Times                                                                ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; A[*]           ; clock      ; 3.761 ; 3.761 ; Rise       ; clock           ;
;  A[0]          ; clock      ; 3.605 ; 3.605 ; Rise       ; clock           ;
;  A[1]          ; clock      ; 3.297 ; 3.297 ; Rise       ; clock           ;
;  A[2]          ; clock      ; 3.761 ; 3.761 ; Rise       ; clock           ;
;  A[3]          ; clock      ; 3.581 ; 3.581 ; Rise       ; clock           ;
;  A[4]          ; clock      ; 3.319 ; 3.319 ; Rise       ; clock           ;
;  A[5]          ; clock      ; 3.570 ; 3.570 ; Rise       ; clock           ;
;  A[6]          ; clock      ; 3.548 ; 3.548 ; Rise       ; clock           ;
;  A[7]          ; clock      ; 3.549 ; 3.549 ; Rise       ; clock           ;
; B[*]           ; clock      ; 3.778 ; 3.778 ; Rise       ; clock           ;
;  B[0]          ; clock      ; 3.324 ; 3.324 ; Rise       ; clock           ;
;  B[1]          ; clock      ; 3.323 ; 3.323 ; Rise       ; clock           ;
;  B[2]          ; clock      ; 3.550 ; 3.550 ; Rise       ; clock           ;
;  B[3]          ; clock      ; 3.562 ; 3.562 ; Rise       ; clock           ;
;  B[4]          ; clock      ; 3.562 ; 3.562 ; Rise       ; clock           ;
;  B[5]          ; clock      ; 3.571 ; 3.571 ; Rise       ; clock           ;
;  B[6]          ; clock      ; 3.778 ; 3.778 ; Rise       ; clock           ;
;  B[7]          ; clock      ; 3.571 ; 3.571 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.301 ; 0.301 ; Rise       ; clock           ;
; data_in        ; clock      ; 3.594 ; 3.594 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -3.067 ; -3.067 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -3.375 ; -3.375 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -3.067 ; -3.067 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -3.531 ; -3.531 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -3.351 ; -3.351 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -3.089 ; -3.089 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -3.340 ; -3.340 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -3.318 ; -3.318 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -3.319 ; -3.319 ; Rise       ; clock           ;
; B[*]           ; clock      ; -3.093 ; -3.093 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -3.094 ; -3.094 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -3.093 ; -3.093 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -3.320 ; -3.320 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -3.332 ; -3.332 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -3.332 ; -3.332 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -3.341 ; -3.341 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -3.548 ; -3.548 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -3.341 ; -3.341 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; -0.071 ; -0.071 ; Rise       ; clock           ;
; data_in        ; clock      ; -3.364 ; -3.364 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 8.039 ; 8.039 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 7.770 ; 7.770 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.815 ; 7.815 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 7.811 ; 7.811 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 8.039 ; 8.039 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.865 ; 7.865 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 8.036 ; 8.036 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.808 ; 7.808 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 7.771 ; 7.771 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.577 ; 7.577 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.771 ; 7.771 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.764 ; 7.764 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.563 ; 7.563 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.447 ; 7.447 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 7.426 ; 7.426 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.605 ; 7.605 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 8.414 ; 8.414 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 8.166 ; 8.166 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 8.166 ; 8.166 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 8.175 ; 8.175 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 8.414 ; 8.414 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 7.497 ; 7.497 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 7.498 ; 7.498 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.503 ; 7.503 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 7.499 ; 7.499 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 7.727 ; 7.727 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.554 ; 7.554 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 7.724 ; 7.724 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.497 ; 7.497 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 7.093 ; 7.093 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.284 ; 7.284 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.438 ; 7.438 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.430 ; 7.430 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.232 ; 7.232 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.139 ; 7.139 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 7.093 ; 7.093 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.270 ; 7.270 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 7.357 ; 7.357 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 7.357 ; 7.357 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 7.357 ; 7.357 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 7.366 ; 7.366 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 7.606 ; 7.606 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -0.810 ; -5.691        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.268 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -34.380               ;
+-------+--------+-----------------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock'                                                                                               ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node         ; To Node              ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; -0.810 ; latch1:inst|Q[3]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.842      ;
; -0.793 ; latch1:inst1|Q[0] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.825      ;
; -0.756 ; latch1:inst1|Q[1] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.788      ;
; -0.730 ; latch1:inst1|Q[2] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.762      ;
; -0.726 ; latch1:inst1|Q[0] ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.756      ;
; -0.721 ; latch1:inst|Q[1]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.753      ;
; -0.717 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.750      ;
; -0.715 ; latch1:inst|Q[3]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.747      ;
; -0.714 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.749      ;
; -0.712 ; latch1:inst|Q[1]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.741      ;
; -0.709 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.742      ;
; -0.708 ; latch1:inst1|Q[1] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.740      ;
; -0.708 ; latch1:inst1|Q[3] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.740      ;
; -0.694 ; latch1:inst1|Q[1] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.726      ;
; -0.690 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.725      ;
; -0.689 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.723      ;
; -0.683 ; latch1:inst|Q[0]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.715      ;
; -0.661 ; latch1:inst1|Q[4] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.693      ;
; -0.660 ; latch1:inst|Q[0]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.692      ;
; -0.651 ; latch1:inst|Q[0]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.680      ;
; -0.650 ; latch1:inst|Q[0]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.682      ;
; -0.645 ; latch1:inst1|Q[0] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.677      ;
; -0.642 ; latch1:inst1|Q[0] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.672      ;
; -0.635 ; latch1:inst|Q[1]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.667      ;
; -0.631 ; latch1:inst1|Q[0] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.663      ;
; -0.627 ; latch1:inst1|Q[1] ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.656      ;
; -0.614 ; latch1:inst|Q[2]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.646      ;
; -0.613 ; latch1:inst|Q[2]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; latch1:inst|Q[4]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.645      ;
; -0.613 ; latch1:inst1|Q[1] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.644      ;
; -0.605 ; latch1:inst1|Q[1] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.635      ;
; -0.603 ; latch1:inst|Q[6]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.636      ;
; -0.602 ; latch1:inst|Q[0]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.632      ;
; -0.602 ; latch1:inst|Q[1]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.634      ;
; -0.597 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.632      ;
; -0.586 ; latch1:inst1|Q[1] ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.616      ;
; -0.583 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.618      ;
; -0.581 ; latch1:inst1|Q[2] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.613      ;
; -0.581 ; latch1:inst1|Q[0] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.612      ;
; -0.580 ; latch1:inst|Q[2]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.612      ;
; -0.579 ; latch1:inst1|Q[2] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.609      ;
; -0.578 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.611      ;
; -0.578 ; latch1:inst1|Q[0] ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.607      ;
; -0.575 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.610      ;
; -0.570 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.603      ;
; -0.569 ; latch1:inst1|Q[6] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.600      ;
; -0.567 ; latch1:inst1|Q[2] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.599      ;
; -0.564 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.597      ;
; -0.560 ; latch1:inst|Q[3]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.590      ;
; -0.559 ; latch1:inst1|Q[3] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.591      ;
; -0.555 ; latch1:inst|Q[0]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.586      ;
; -0.552 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.584      ;
; -0.551 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.586      ;
; -0.550 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.584      ;
; -0.549 ; latch1:inst|Q[1]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.579      ;
; -0.548 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.583      ;
; -0.548 ; latch1:inst|Q[3]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.580      ;
; -0.545 ; latch1:inst1|Q[3] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.577      ;
; -0.544 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[0] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.576      ;
; -0.544 ; latch1:inst|Q[4]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.576      ;
; -0.538 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.570      ;
; -0.538 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.570      ;
; -0.537 ; latch1:inst1|Q[3] ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.567      ;
; -0.536 ; latch1:inst|Q[0]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.566      ;
; -0.535 ; latch1:inst|Q[2]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.564      ;
; -0.534 ; latch1:inst1|Q[5] ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.566      ;
; -0.518 ; latch1:inst1|Q[2] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.549      ;
; -0.518 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.553      ;
; -0.515 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.550      ;
; -0.511 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.544      ;
; -0.507 ; latch1:inst|Q[1]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.538      ;
; -0.504 ; latch1:inst|Q[0]  ; ALU2:inst2|result[0] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.533      ;
; -0.497 ; latch1:inst|Q[4]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.496 ; latch1:inst1|Q[4] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.528      ;
; -0.496 ; latch1:inst1|Q[3] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.527      ;
; -0.493 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.527      ;
; -0.492 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.527      ;
; -0.485 ; latch1:inst1|Q[7] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.517      ;
; -0.485 ; latch1:inst|Q[2]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.516      ;
; -0.484 ; latch1:inst|Q[3]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.515      ;
; -0.478 ; latch1:inst|Q[7]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.510      ;
; -0.473 ; latch1:inst1|Q[5] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.505      ;
; -0.466 ; latch1:inst|Q[2]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.496      ;
; -0.464 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.496      ;
; -0.460 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.495      ;
; -0.458 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.493      ;
; -0.451 ; latch1:inst|Q[1]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 1.000        ; -0.002     ; 1.481      ;
; -0.450 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.485      ;
; -0.449 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 1.482      ;
; -0.449 ; latch1:inst1|Q[4] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.480      ;
; -0.446 ; latch1:inst|Q[5]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.478      ;
; -0.442 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[5] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.477      ;
; -0.439 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.002      ; 1.473      ;
; -0.438 ; latch1:inst1|Q[6] ; ALU2:inst2|result[7] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.470      ;
; -0.427 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.003      ; 1.462      ;
; -0.427 ; latch1:inst1|Q[5] ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; -0.001     ; 1.458      ;
; -0.425 ; latch1:inst1|Q[4] ; ALU2:inst2|result[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.457      ;
; -0.423 ; latch1:inst|Q[6]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.455      ;
; -0.423 ; latch1:inst1|Q[2] ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; -0.003     ; 1.452      ;
; -0.422 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.454      ;
+--------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock'                                                                                               ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node         ; To Node              ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+
; 0.268 ; FSM:inst3|yfsm.s0 ; FSM:inst3|yfsm.s1    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.420      ;
; 0.322 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.474      ;
; 0.323 ; FSM:inst3|yfsm.s8 ; FSM:inst3|yfsm.s0    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.475      ;
; 0.324 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.476      ;
; 0.349 ; FSM:inst3|yfsm.s3 ; FSM:inst3|yfsm.s4    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.501      ;
; 0.352 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.505      ;
; 0.356 ; FSM:inst3|yfsm.s5 ; FSM:inst3|yfsm.s6    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.508      ;
; 0.377 ; latch1:inst1|Q[0] ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.528      ;
; 0.415 ; FSM:inst3|yfsm.s4 ; FSM:inst3|yfsm.s5    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.567      ;
; 0.419 ; FSM:inst3|yfsm.s2 ; FSM:inst3|yfsm.s3    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.571      ;
; 0.419 ; FSM:inst3|yfsm.s1 ; FSM:inst3|yfsm.s2    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.571      ;
; 0.428 ; FSM:inst3|yfsm.s7 ; FSM:inst3|yfsm.s8    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.580      ;
; 0.465 ; latch1:inst1|Q[6] ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.617      ;
; 0.483 ; latch1:inst1|Q[5] ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.633      ;
; 0.528 ; FSM:inst3|yfsm.s6 ; FSM:inst3|yfsm.s7    ; clock        ; clock       ; 0.000        ; 0.000      ; 0.680      ;
; 0.542 ; latch1:inst|Q[6]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.694      ;
; 0.555 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 0.709      ;
; 0.563 ; latch1:inst1|Q[4] ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.003     ; 0.712      ;
; 0.584 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 0.739      ;
; 0.586 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.003      ; 0.741      ;
; 0.586 ; latch1:inst1|Q[7] ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.738      ;
; 0.588 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 0.743      ;
; 0.621 ; latch1:inst|Q[4]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 0.772      ;
; 0.663 ; latch1:inst|Q[1]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.002     ; 0.813      ;
; 0.689 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.842      ;
; 0.720 ; latch1:inst|Q[5]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.872      ;
; 0.741 ; latch1:inst|Q[7]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.893      ;
; 0.750 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.902      ;
; 0.803 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.956      ;
; 0.808 ; latch1:inst|Q[2]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.960      ;
; 0.813 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.966      ;
; 0.821 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.974      ;
; 0.836 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 0.989      ;
; 0.864 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.016      ;
; 0.866 ; latch1:inst1|Q[1] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.018      ;
; 0.868 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.020      ;
; 0.871 ; FSM:inst3|yfsm.s8 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.024      ;
; 0.874 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.026      ;
; 0.887 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.039      ;
; 0.892 ; latch1:inst|Q[5]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.044      ;
; 0.898 ; latch1:inst1|Q[0] ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.047      ;
; 0.913 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.067      ;
; 0.928 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.082      ;
; 0.929 ; latch1:inst|Q[0]  ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.078      ;
; 0.949 ; latch1:inst1|Q[3] ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.099      ;
; 0.955 ; latch1:inst1|Q[1] ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.105      ;
; 0.964 ; latch1:inst|Q[4]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.116      ;
; 0.965 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.120      ;
; 0.965 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.120      ;
; 0.973 ; latch1:inst1|Q[5] ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.125      ;
; 0.978 ; latch1:inst|Q[5]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.129      ;
; 0.992 ; latch1:inst|Q[3]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.144      ;
; 0.996 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.148      ;
; 1.008 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.163      ;
; 1.018 ; latch1:inst1|Q[2] ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.167      ;
; 1.023 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.178      ;
; 1.032 ; latch1:inst|Q[1]  ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.182      ;
; 1.047 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.199      ;
; 1.053 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.205      ;
; 1.065 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.218      ;
; 1.078 ; FSM:inst3|yfsm.s6 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.230      ;
; 1.088 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.243      ;
; 1.088 ; FSM:inst3|yfsm.s5 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.243      ;
; 1.090 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.245      ;
; 1.090 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.245      ;
; 1.096 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.251      ;
; 1.096 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.251      ;
; 1.099 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.252      ;
; 1.105 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.257      ;
; 1.112 ; latch1:inst1|Q[7] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.264      ;
; 1.132 ; latch1:inst1|Q[6] ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.283      ;
; 1.155 ; latch1:inst1|Q[4] ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.307      ;
; 1.156 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.308      ;
; 1.157 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.311      ;
; 1.157 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.310      ;
; 1.168 ; latch1:inst|Q[2]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.319      ;
; 1.175 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.327      ;
; 1.176 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[1] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.329      ;
; 1.181 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.333      ;
; 1.195 ; latch1:inst|Q[3]  ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.345      ;
; 1.203 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.357      ;
; 1.214 ; latch1:inst|Q[0]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.365      ;
; 1.220 ; latch1:inst1|Q[3] ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; -0.002     ; 1.370      ;
; 1.221 ; latch1:inst|Q[0]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.370      ;
; 1.226 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.380      ;
; 1.234 ; latch1:inst|Q[4]  ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.386      ;
; 1.241 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[5] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.396      ;
; 1.246 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.401      ;
; 1.252 ; FSM:inst3|yfsm.s7 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.407      ;
; 1.255 ; latch1:inst|Q[6]  ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.408      ;
; 1.262 ; latch1:inst1|Q[6] ; ALU2:inst2|result[7] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.414      ;
; 1.272 ; latch1:inst1|Q[5] ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.423      ;
; 1.274 ; latch1:inst|Q[2]  ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.423      ;
; 1.275 ; latch1:inst|Q[1]  ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; -0.001     ; 1.426      ;
; 1.277 ; latch1:inst1|Q[2] ; ALU2:inst2|result[2] ; clock        ; clock       ; 0.000        ; -0.003     ; 1.426      ;
; 1.278 ; latch1:inst|Q[0]  ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.430      ;
; 1.284 ; FSM:inst3|yfsm.s3 ; ALU2:inst2|result[6] ; clock        ; clock       ; 0.000        ; 0.002      ; 1.438      ;
; 1.285 ; FSM:inst3|yfsm.s1 ; ALU2:inst2|result[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.437      ;
; 1.287 ; FSM:inst3|yfsm.s2 ; ALU2:inst2|result[4] ; clock        ; clock       ; 0.000        ; 0.003      ; 1.442      ;
; 1.290 ; FSM:inst3|yfsm.s4 ; ALU2:inst2|result[3] ; clock        ; clock       ; 0.000        ; 0.001      ; 1.443      ;
+-------+-------------------+----------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock'                                                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[0]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[0]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[1]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[1]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[2]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[2]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[3]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[3]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[4]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[4]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[5]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[5]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[6]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[6]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; ALU2:inst2|result[7]   ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; ALU2:inst2|result[7]   ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s0      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s1      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s2      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s3      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s4      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s5      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s6      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s7      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; FSM:inst3|yfsm.s8      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[0]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[1]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[2]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[3]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[4]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[5]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[6]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst1|Q[7]      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[0]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[1]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[2]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[3]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[4]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[5]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[6]       ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; latch1:inst|Q[7]       ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; latch1:inst|Q[7]       ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock|combout          ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|inclk[0] ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; clock~clkctrl|outclk   ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[0]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[1]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[2]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[3]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[4]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[5]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[6]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst1|Q[7]|clk         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[0]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[1]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[2]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[2]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[3]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[3]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[4]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clock ; Rise       ; inst2|result[4]|clk    ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clock ; Rise       ; inst2|result[5]|clk    ;
+--------+--------------+----------------+------------------+-------+------------+------------------------+


+------------------------------------------------------------------------------+
; Setup Times                                                                  ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; 2.000  ; 2.000  ; Rise       ; clock           ;
;  A[0]          ; clock      ; 1.948  ; 1.948  ; Rise       ; clock           ;
;  A[1]          ; clock      ; 1.816  ; 1.816  ; Rise       ; clock           ;
;  A[2]          ; clock      ; 2.000  ; 2.000  ; Rise       ; clock           ;
;  A[3]          ; clock      ; 1.942  ; 1.942  ; Rise       ; clock           ;
;  A[4]          ; clock      ; 1.808  ; 1.808  ; Rise       ; clock           ;
;  A[5]          ; clock      ; 1.938  ; 1.938  ; Rise       ; clock           ;
;  A[6]          ; clock      ; 1.912  ; 1.912  ; Rise       ; clock           ;
;  A[7]          ; clock      ; 1.918  ; 1.918  ; Rise       ; clock           ;
; B[*]           ; clock      ; 2.016  ; 2.016  ; Rise       ; clock           ;
;  B[0]          ; clock      ; 1.816  ; 1.816  ; Rise       ; clock           ;
;  B[1]          ; clock      ; 1.812  ; 1.812  ; Rise       ; clock           ;
;  B[2]          ; clock      ; 1.912  ; 1.912  ; Rise       ; clock           ;
;  B[3]          ; clock      ; 1.918  ; 1.918  ; Rise       ; clock           ;
;  B[4]          ; clock      ; 1.926  ; 1.926  ; Rise       ; clock           ;
;  B[5]          ; clock      ; 1.929  ; 1.929  ; Rise       ; clock           ;
;  B[6]          ; clock      ; 2.016  ; 2.016  ; Rise       ; clock           ;
;  B[7]          ; clock      ; 1.933  ; 1.933  ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; -0.138 ; -0.138 ; Rise       ; clock           ;
; data_in        ; clock      ; 1.997  ; 1.997  ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -1.688 ; -1.688 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -1.828 ; -1.828 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -1.696 ; -1.696 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -1.880 ; -1.880 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -1.822 ; -1.822 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -1.688 ; -1.688 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -1.818 ; -1.818 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -1.792 ; -1.792 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -1.798 ; -1.798 ; Rise       ; clock           ;
; B[*]           ; clock      ; -1.692 ; -1.692 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -1.696 ; -1.696 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -1.692 ; -1.692 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -1.792 ; -1.792 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -1.798 ; -1.798 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -1.806 ; -1.806 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -1.809 ; -1.809 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -1.896 ; -1.896 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -1.813 ; -1.813 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.258  ; 0.258  ; Rise       ; clock           ;
; data_in        ; clock      ; -1.877 ; -1.877 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.390 ; 4.390 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.282 ; 4.282 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.286 ; 4.286 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.284 ; 4.284 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.390 ; 4.390 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.315 ; 4.315 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.386 ; 4.386 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.279 ; 4.279 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 4.283 ; 4.283 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.157 ; 4.157 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.281 ; 4.281 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.283 ; 4.283 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.172 ; 4.172 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 4.097 ; 4.097 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 4.070 ; 4.070 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.194 ; 4.194 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.533 ; 4.533 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 4.417 ; 4.417 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.416 ; 4.416 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 4.424 ; 4.424 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.533 ; 4.533 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.150 ; 4.150 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.153 ; 4.153 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.156 ; 4.156 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.154 ; 4.154 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.260 ; 4.260 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.186 ; 4.186 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.257 ; 4.257 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.150 ; 4.150 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 3.916 ; 3.916 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.002 ; 4.002 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.126 ; 4.126 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.122 ; 4.122 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.018 ; 4.018 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 3.942 ; 3.942 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 3.916 ; 3.916 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.038 ; 4.038 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.097 ; 4.097 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 4.117 ; 4.117 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.097 ; 4.097 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 4.106 ; 4.106 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.215 ; 4.215 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -3.180  ; 0.268 ; N/A      ; N/A     ; -1.380              ;
;  clock           ; -3.180  ; 0.268 ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -24.041 ; 0.0   ; 0.0      ; 0.0     ; -34.38              ;
;  clock           ; -24.041 ; 0.000 ; N/A      ; N/A     ; -34.380             ;
+------------------+---------+-------+----------+---------+---------------------+


+----------------------------------------------------------------------------+
; Setup Times                                                                ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; A[*]           ; clock      ; 3.761 ; 3.761 ; Rise       ; clock           ;
;  A[0]          ; clock      ; 3.605 ; 3.605 ; Rise       ; clock           ;
;  A[1]          ; clock      ; 3.297 ; 3.297 ; Rise       ; clock           ;
;  A[2]          ; clock      ; 3.761 ; 3.761 ; Rise       ; clock           ;
;  A[3]          ; clock      ; 3.581 ; 3.581 ; Rise       ; clock           ;
;  A[4]          ; clock      ; 3.319 ; 3.319 ; Rise       ; clock           ;
;  A[5]          ; clock      ; 3.570 ; 3.570 ; Rise       ; clock           ;
;  A[6]          ; clock      ; 3.548 ; 3.548 ; Rise       ; clock           ;
;  A[7]          ; clock      ; 3.549 ; 3.549 ; Rise       ; clock           ;
; B[*]           ; clock      ; 3.778 ; 3.778 ; Rise       ; clock           ;
;  B[0]          ; clock      ; 3.324 ; 3.324 ; Rise       ; clock           ;
;  B[1]          ; clock      ; 3.323 ; 3.323 ; Rise       ; clock           ;
;  B[2]          ; clock      ; 3.550 ; 3.550 ; Rise       ; clock           ;
;  B[3]          ; clock      ; 3.562 ; 3.562 ; Rise       ; clock           ;
;  B[4]          ; clock      ; 3.562 ; 3.562 ; Rise       ; clock           ;
;  B[5]          ; clock      ; 3.571 ; 3.571 ; Rise       ; clock           ;
;  B[6]          ; clock      ; 3.778 ; 3.778 ; Rise       ; clock           ;
;  B[7]          ; clock      ; 3.571 ; 3.571 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.301 ; 0.301 ; Rise       ; clock           ;
; data_in        ; clock      ; 3.594 ; 3.594 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Hold Times                                                                   ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; A[*]           ; clock      ; -1.688 ; -1.688 ; Rise       ; clock           ;
;  A[0]          ; clock      ; -1.828 ; -1.828 ; Rise       ; clock           ;
;  A[1]          ; clock      ; -1.696 ; -1.696 ; Rise       ; clock           ;
;  A[2]          ; clock      ; -1.880 ; -1.880 ; Rise       ; clock           ;
;  A[3]          ; clock      ; -1.822 ; -1.822 ; Rise       ; clock           ;
;  A[4]          ; clock      ; -1.688 ; -1.688 ; Rise       ; clock           ;
;  A[5]          ; clock      ; -1.818 ; -1.818 ; Rise       ; clock           ;
;  A[6]          ; clock      ; -1.792 ; -1.792 ; Rise       ; clock           ;
;  A[7]          ; clock      ; -1.798 ; -1.798 ; Rise       ; clock           ;
; B[*]           ; clock      ; -1.692 ; -1.692 ; Rise       ; clock           ;
;  B[0]          ; clock      ; -1.696 ; -1.696 ; Rise       ; clock           ;
;  B[1]          ; clock      ; -1.692 ; -1.692 ; Rise       ; clock           ;
;  B[2]          ; clock      ; -1.792 ; -1.792 ; Rise       ; clock           ;
;  B[3]          ; clock      ; -1.798 ; -1.798 ; Rise       ; clock           ;
;  B[4]          ; clock      ; -1.806 ; -1.806 ; Rise       ; clock           ;
;  B[5]          ; clock      ; -1.809 ; -1.809 ; Rise       ; clock           ;
;  B[6]          ; clock      ; -1.896 ; -1.896 ; Rise       ; clock           ;
;  B[7]          ; clock      ; -1.813 ; -1.813 ; Rise       ; clock           ;
; Enable_Decoder ; clock      ; 0.258  ; 0.258  ; Rise       ; clock           ;
; data_in        ; clock      ; -1.877 ; -1.877 ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 8.039 ; 8.039 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 7.770 ; 7.770 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 7.815 ; 7.815 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 7.811 ; 7.811 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 8.039 ; 8.039 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 7.865 ; 7.865 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 8.036 ; 8.036 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 7.808 ; 7.808 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 7.771 ; 7.771 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 7.577 ; 7.577 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 7.771 ; 7.771 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 7.764 ; 7.764 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 7.563 ; 7.563 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 7.447 ; 7.447 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 7.426 ; 7.426 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 7.605 ; 7.605 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 8.414 ; 8.414 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 8.166 ; 8.166 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 8.166 ; 8.166 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 8.175 ; 8.175 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 8.414 ; 8.414 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                ;
+------------------+------------+-------+-------+------------+-----------------+
; Data Port        ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+------------------+------------+-------+-------+------------+-----------------+
; R_first_four[*]  ; clock      ; 4.150 ; 4.150 ; Rise       ; clock           ;
;  R_first_four[0] ; clock      ; 4.153 ; 4.153 ; Rise       ; clock           ;
;  R_first_four[1] ; clock      ; 4.156 ; 4.156 ; Rise       ; clock           ;
;  R_first_four[2] ; clock      ; 4.154 ; 4.154 ; Rise       ; clock           ;
;  R_first_four[3] ; clock      ; 4.260 ; 4.260 ; Rise       ; clock           ;
;  R_first_four[4] ; clock      ; 4.186 ; 4.186 ; Rise       ; clock           ;
;  R_first_four[5] ; clock      ; 4.257 ; 4.257 ; Rise       ; clock           ;
;  R_first_four[6] ; clock      ; 4.150 ; 4.150 ; Rise       ; clock           ;
; R_last_four[*]   ; clock      ; 3.916 ; 3.916 ; Rise       ; clock           ;
;  R_last_four[0]  ; clock      ; 4.002 ; 4.002 ; Rise       ; clock           ;
;  R_last_four[1]  ; clock      ; 4.126 ; 4.126 ; Rise       ; clock           ;
;  R_last_four[2]  ; clock      ; 4.122 ; 4.122 ; Rise       ; clock           ;
;  R_last_four[3]  ; clock      ; 4.018 ; 4.018 ; Rise       ; clock           ;
;  R_last_four[4]  ; clock      ; 3.942 ; 3.942 ; Rise       ; clock           ;
;  R_last_four[5]  ; clock      ; 3.916 ; 3.916 ; Rise       ; clock           ;
;  R_last_four[6]  ; clock      ; 4.038 ; 4.038 ; Rise       ; clock           ;
; student_id[*]    ; clock      ; 4.097 ; 4.097 ; Rise       ; clock           ;
;  student_id[1]   ; clock      ; 4.117 ; 4.117 ; Rise       ; clock           ;
;  student_id[3]   ; clock      ; 4.097 ; 4.097 ; Rise       ; clock           ;
;  student_id[4]   ; clock      ; 4.106 ; 4.106 ; Rise       ; clock           ;
;  student_id[6]   ; clock      ; 4.215 ; 4.215 ; Rise       ; clock           ;
+------------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 344      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 344      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 21    ; 21   ;
; Unconstrained Input Port Paths  ; 51    ; 51   ;
; Unconstrained Output Ports      ; 18    ; 18   ;
; Unconstrained Output Port Paths ; 92    ; 92   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 32-bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version
    Info: Processing started: Sat Nov 27 19:50:21 2021
Info: Command: quartus_sta PSET2 -c PSET2
Info: qsta_default_script.tcl version: #1
Info (11104): Parallel Compilation has detected 8 hyper-threaded processors. However, the extra hyper-threaded processors will not be used by default. Parallel Compilation will use 4 of the 4 physical processors detected instead.
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'PSET2.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clock clock
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.180
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.180       -24.041 clock 
Info (332146): Worst-case hold slack is 0.534
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.534         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -34.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.810
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.810        -5.691 clock 
Info (332146): Worst-case hold slack is 0.268
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.268         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -34.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 32-bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 324 megabytes
    Info: Processing ended: Sat Nov 27 19:50:23 2021
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


